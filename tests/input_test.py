import unittest
import numpy as np
from input import *


class TestInput(unittest.TestCase):
    def setUp(self):
        with open("benzene_.in", "w") as f:
            pass

    def tearDown(self):
        os.remove("benzene_.in")

    def test_lines_that_contain(self):
        with open("test_files/test_output.txt", "r") as self.f:
            self.assertEqual(lines_that_contain("symbol", self.f),
                             ['Chemical symbol           : C\n', 'Chemical symbol           : H\n'])

    def test_lines_that_start_with(self):
        with open("test_files/test_output.txt", "r") as self.f:
            self.assertEqual(lines_that_start_with("Atom", self.f), ['Atom Type #    1\n', 'Atom Type #    2\n'])

    def test_get_last_char(self):
        self.assertEqual(get_last_char("Chemical symbol           : H", "test_files/test_output.txt"), ["H"])

    def test_get_lines_between(self):
        self.assertEqual(get_lines_between("test_files/test_output.txt", "n l m     energy     occupancy    radius",
                                           "---------------------------", "----------------", False, True, 0),
                         ['2 0 0   -0.219760     2.000000     4.913288',
                          '2 1 0   0.272680     0.666670     4.913288',
                          '2 1 1   0.272680     0.666670     4.913288',
                          '2 1 2   0.272680     0.666660     4.913288'])
        self.assertEqual(get_lines_between("test_files/test_output.txt", "n l m     energy     occupancy    radius",
                                           "---------------------------", "----------------", False, True, 1),
                         ['1 0 0   -0.349079     1.000000     2.305467'])
        self.assertEqual(
            get_lines_between("test_files/test_output.txt", "Atomic positions (a0):", "Total forces (Ry/a0):"),
            ['C       0.00000      2.65076      0.00000',
             'H       0.00000      4.70597      0.00000',
             'C      -2.29562      1.32538      0.00000',
             'H      -4.07550      2.35299      0.00000',
             'C      -2.29562     -1.32538      0.00000',
             'H      -4.07550     -2.35299      0.00000',
             'C       0.00000     -2.65076      0.00000',
             'H       0.00000     -4.70597      0.00000',
             'C       2.29562     -1.32538      0.00000',
             'H       4.07550     -2.35299      0.00000',
             'C       2.29562      1.32538      0.00000',
             'H       4.07550      2.35299      0.00000'])

    def test_get_line_number(self):
        self.assertEqual(get_line_number("test_files/test_output.txt", "Tabulated tight binding"), 13)

    def test_correct_quantum(self):
        self.assertEqual(correct_quantum(['2 0 0', '2 1 0', '2 1 1', '2 1 2']),
                         [[2, 0, 0], [2, 1, -1], [2, 1, 0], [2, 1, 1]])
        self.assertEqual(correct_quantum(['1 0 0']), [[1, 0, 0]])

    def test_create_orbital_dict(self):
        orb_dict, quantum_dict = create_orbital_dict("test_files/test_output.txt")
        self.assertEqual(orb_dict, {'C': '4', 'H': '1'})
        self.assertEqual(quantum_dict, {'C': [[2, 0, 0], [2, 1, -1], [2, 1, 0], [2, 1, 1]], 'H': [[1, 0, 0]]})

    def test_create_all_atoms(self):
        atoms = create_all_atoms("test_files/test_output.txt")
        self.assertEqual(len(atoms), 12)

    def test_set_attr_from_file(self):
        atoms = create_all_atoms("test_files/test_output.txt")
        set_attr_from_file("test_files/test_attributes.txt", atoms)
        self.assertEqual(atoms[0].get_colour(), (0.0, 0.0, 0.0, 1.0))
        self.assertEqual(atoms[0].get_radius(), 0.67)
        self.assertEqual(atoms[0].get_bonding(), ['C', 'H'])
        self.assertEqual(atoms[11].get_colour(), (1.0, 1.0, 1.0, 1.0))
        self.assertEqual(atoms[11].get_radius(), 0.53)
        self.assertEqual(atoms[11].get_bonding(), ['All'])

    def test_eig_arr_from_wf(self):
        orb_dict, quantum_dict = create_orbital_dict("test_files/test_output.txt")
        atoms = create_all_atoms("test_files/test_output.txt")
        all_modes, energies = eig_arr_from_wf("test_files/test_wavefunction.wf", atoms, orb_dict)
        self.assertEqual(all_modes, [
            ['0.3817691135', '-5.551115123e-17', '-1.1379786e-13', '0.1062330322', '0.09816125964', '0.3817654057',
             '-3.90037174e-17', '-0.09200168623', '0.05311435587', '0.09815985379', '0.3817654057', '1.292969444e-17',
             '-0.09200168623', '-0.05311435587', '0.09815985379', '0.3817691135', '3.222073903e-17', '-2.955197783e-14',
             '-0.1062330322', '0.09816125964', '0.3817654057', '-2.941816219e-18', '0.09200168623', '-0.05311435587',
             '0.09815985379', '0.3817654057', '-3.530027175e-17', '0.09200168623', '0.05311435587', '0.09815985379'],
            ['-0.5020691507', '-1.665334537e-16', '1.240415161e-09', '-0.058623293', '-0.2016746782', '-0.2510346176',
             '4.599191598e-18', '0.1088462778', '0.129902433', '-0.1008368278', '0.2510346232', '-6.961289392e-18',
             '-0.1088462777', '0.1299024316', '0.1008368301', '0.5020691507', '4.340916672e-17', '1.240287493e-09',
             '-0.058623293', '0.2016746782', '0.2510346176', '-1.28388429e-17', '0.1088462778', '0.129902433',
             '0.1008368278', '-0.2510346232', '3.191283777e-17', '-0.1088462777', '0.1299024316', '-0.1008368301'],
            ['-3.230945239e-09', '-2.364153245e-17', '-0.1927480913', '-3.772509666e-10', '-1.297841761e-09',
             '-0.4348042076', '-9.105716708e-17', '-0.004218014574', '-0.1088421759', '-0.1746567441', '-0.4348042043',
             '-2.998764749e-16', '-0.004218015975', '0.1088421776', '-0.1746567428', '3.230458442e-09',
             '-1.111776727e-17', '-0.1927480913', '-3.77158609e-10', '1.297665598e-09', '0.4348042076',
             '7.470345533e-18', '-0.004218014574', '-0.1088421759', '0.1746567441', '0.4348042043', '-4.069957886e-17',
             '-0.004218015975', '0.1088421776', '0.1746567428'],
            ['4.104918209e-09', '-2.2939989e-18', '-0.313157973', '-1.275558548e-09', '3.734765019e-09',
             '-0.3028091934', '2.576336555e-16', '-0.003198281575', '0.1826480179', '-0.2755033726', '0.3028091893',
             '1.944233876e-16', '0.003198277287', '0.1826480227', '0.2755033689', '4.105348546e-09', '-8.119410694e-18',
             '0.313157973', '1.275587354e-09', '3.735075392e-09', '-0.3028091934', '1.816011435e-17', '0.003198281576',
             '-0.1826480179', '-0.2755033726', '0.3028091893', '-2.507939601e-17', '-0.003198277287', '-0.1826480227',
             '0.2755033689'],
            ['-0.3496504446', '-1.110223025e-16', '-3.676520977e-09', '0.1086530054', '-0.3181256147', '0.1748287507',
             '1.313983302e-16', '0.1826489087', '0.2077011479', '0.1590663634', '0.1748287578', '4.312800743e-17',
             '0.1826489088', '-0.2077011436', '0.1590663698', '-0.3496504446', '-3.48464539e-17', '3.676855802e-09',
             '-0.1086530054', '-0.3181256147', '0.1748287507', '3.587096219e-17', '-0.1826489087', '-0.2077011479',
             '0.1590663634', '0.1748287578', '-2.478523304e-18', '-0.1826489088', '0.2077011436', '0.1590663698'],
            ['-0.009816698612', '-1.370431546e-16', '-5.973346817e-14', '0.2954485755', '-0.2815739888',
             '-0.009814408275', '-1.295852968e-16', '-0.2558629021', '0.1477226035', '-0.2815684914', '-0.009814408276',
             '-1.032737274e-16', '-0.2558629021', '-0.1477226035', '-0.2815684914', '-0.009816698613',
             '-2.542666338e-17', '-2.342338432e-13', '-0.2954485755', '-0.2815739888', '-0.009814408276',
             '-3.353387629e-17', '0.2558629021', '-0.1477226035', '-0.2815684914', '-0.009814408275',
             '-4.115834871e-17', '0.2558629021', '0.1477226035', '-0.2815684914'],
            ['-0.166962218', '-5.551115123e-17', '2.434719093e-13', '0.1701074967', '-0.331437536', '0.1669627505',
             '-3.068266164e-17', '0.1473212971', '-0.08505496187', '0.3314417556', '-0.1669627505', '4.233662881e-17',
             '-0.1473212971', '-0.08505496187', '-0.3314417556', '0.166962218', '3.057358903e-17', '-4.158780388e-13',
             '0.1701074967', '0.331437536', '-0.1669627505', '-1.92969704e-17', '0.1473212971', '-0.08505496187',
             '-0.3314417556', '0.1669627505', '-1.162220941e-17', '-0.1473212971', '-0.08505496187', '0.3314417556'],
            ['2.463679338e-14', '-1.744947167e-18', '0.4082612194', '-1.005279193e-12', '1.123255856e-12',
             '2.709896389e-06', '-1.351248135e-16', '-0.2041552872', '-0.3535279415', '-4.05530393e-05',
             '2.709897341e-06', '-2.182685414e-16', '-0.2041552872', '0.3535279415', '-4.055303764e-05',
             '1.605920258e-13', '2.462122225e-16', '0.4082612194', '-6.848714304e-13', '-5.961153608e-13',
             '-2.709897366e-06', '3.219182582e-16', '-0.2041552872', '-0.3535279415', '4.055303651e-05',
             '-2.709896548e-06', '2.033653016e-16', '-0.2041552872', '0.3535279415', '4.05530399e-05'],
            ['-0.06282463479', '2.844946501e-16', '1.93276839e-10', '-0.4006243904', '0.3916990268', '-0.03141398386',
             '9.265423851e-17', '0.2273157281', '-0.006899108735', '0.1958459624', '0.03141398403', '-1.282169284e-16',
             '-0.227315729', '-0.00689910945', '-0.1958459634', '0.06282463479', '-2.648041703e-17', '1.927272307e-10',
             '-0.4006243904', '-0.3916990268', '0.03141398386', '-3.070866142e-17', '0.2273157281', '-0.006899108739',
             '-0.1958459624', '-0.03141398403', '8.654114326e-17', '-0.227315729', '-0.006899109445', '0.1958459634'],
            ['9.800599016e-11', '-3.182511505e-17', '0.1242960372', '6.255268664e-10', '-6.11687138e-10',
             '0.0544105382', '-5.800191596e-18', '-0.2693580882', '0.2273580048', '-0.33921866', '0.05441053811',
             '1.170332161e-16', '-0.2693580875', '-0.2273580048', '-0.3392186594', '-9.785079778e-11',
             '3.413802904e-17', '0.1242960372', '6.245255708e-10', '6.10702306e-10', '-0.0544105382', '8.427494353e-17',
             '-0.2693580882', '0.2273580048', '0.33921866', '-0.05441053811', '3.743261569e-17', '-0.2693580875',
             '-0.2273580048', '0.3392186594'],
            ['-5.450009715e-10', '7.558709565e-17', '0.3797480407', '-2.809861149e-09', '3.578374612e-09',
             '0.04480410512', '-3.592270742e-16', '-0.2949471652', '-0.04895986221', '-0.2941044151', '-0.04480410458',
             '5.319817284e-18', '0.2949471663', '-0.04895986961', '0.2941044115', '-5.452859822e-10',
             '-6.806803808e-17', '-0.3797480407', '2.810253179e-09', '3.57857628e-09', '0.04480410512',
             '-1.131091449e-16', '0.2949471652', '0.04895986221', '-0.2941044151', '-0.04480410457', '3.989741694e-17',
             '-0.2949471662', '0.04895986961', '0.2941044115'],
            ['0.05173880748', '-8.500145032e-17', '4.001694323e-09', '0.2666761616', '-0.3395979749', '-0.02587081994',
             '3.648154892e-17', '-0.04896080191', '-0.3514844607', '0.1698007127', '-0.02587082089', '-6.641307198e-17',
             '-0.04896079569', '0.3514844597', '0.1698007189', '0.05173880748', '-3.252338896e-17', '-4.001400192e-09',
             '-0.2666761616', '-0.339597975', '-0.02587081994', '-5.383029844e-17', '0.04896080191', '0.3514844607',
             '0.1698007127', '-0.02587082089', '-4.806262433e-17', '0.04896079569', '-0.3514844597', '0.1698007189'],
            ['1.149092548e-16', '-0.4082494719', '-2.483368939e-17', '-7.658782078e-17', '5.551115123e-17',
             '-2.220446049e-16', '-0.4082476997', '2.775557562e-16', '-8.326672685e-17', '1.666465352e-16',
             '1.047339299e-16', '-0.4082476997', '-8.998878032e-17', '-1.125401855e-16', '-5.475900968e-17',
             '6.73433026e-17', '-0.4082494719', '1.225180795e-16', '-5.46394275e-17', '-9.884854074e-17',
             '-5.59448321e-17', '-0.4082476997', '-2.342960895e-16', '-1.056012916e-16', '2.156882326e-17',
             '-2.775557562e-17', '-0.4082476997', '-1.387778781e-16', '-6.938893904e-17', '-4.152028191e-17'],
            ['-1.863737207e-16', '0.5773495844', '-9.909085977e-18', '9.445092416e-17', '0', '1.110223025e-16',
             '0.2886758155', '-3.885780586e-16', '0', '-1.937341555e-17', '-6.505213035e-18', '-0.2886758233',
             '2.992397996e-17', '7.090682208e-17', '6.746872867e-17', '-8.624106655e-19', '-0.5773495844',
             '-4.031531495e-17', '3.996165307e-17', '9.013158207e-17', '0', '-0.2886758155', '-1.201296007e-16',
             '-9.30245464e-17', '1.299187738e-16', '5.551115123e-17', '0.2886758233', '8.326672685e-17',
             '1.387778781e-16', '-3.325120336e-17'],
            ['-1.588046439e-18', '4.491109061e-09', '4.205387774e-17', '3.421268531e-17', '2.015777859e-17',
             '1.346592966e-16', '0.5000000022', '-1.307555695e-16', '-7.766521008e-17', '-2.572826813e-17',
             '-1.29671973e-16', '0.4999999978', '-3.845517731e-17', '3.43259091e-17', '1.291438406e-16',
             '1.484932664e-17', '-4.490079011e-09', '-5.905492538e-17', '-1.619902566e-17', '1.17122992e-17',
             '9.23705741e-17', '-0.5000000022', '-7.25668593e-17', '-6.281776731e-17', '-1.484127155e-16',
             '-1.437613133e-16', '-0.4999999978', '-7.741021801e-17', '1.582562186e-16', '-1.185127948e-17'],
            ['3.061751668e-17', '5.037586325e-09', '9.829817615e-17', '-4.321528402e-17', '-5.570033033e-17',
             '-1.704806181e-16', '-0.5000000025', '2.750436206e-16', '-2.197446822e-16', '-3.29869292e-17',
             '3.959145107e-17', '0.4999999975', '-1.435002406e-17', '-3.294296615e-17', '-3.1523489e-17',
             '9.793950085e-17', '5.038687294e-09', '5.733428597e-17', '4.255059961e-17', '-1.3562673e-16',
             '2.571135497e-17', '-0.5000000025', '-2.076942826e-16', '-1.906423817e-17', '-5.9279962e-17',
             '1.267277214e-16', '0.4999999975', '2.176190021e-16', '3.005441683e-17', '-1.217114384e-17'],
            ['2.601870499e-16', '-0.5773494338', '9.262833579e-17', '-4.818746301e-17', '-1.665334537e-16',
             '5.551115123e-17', '0.2886759657', '1.387778781e-16', '-5.551115123e-17', '-8.466931324e-17',
             '-7.199102425e-17', '0.2886759744', '-6.613633252e-17', '1.311884629e-16', '8.743389441e-17',
             '1.889498679e-16', '-0.5773494338', '-3.317264947e-17', '8.456145851e-17', '-2.218922259e-16',
             '4.597017211e-17', '0.2886759657', '-1.628471663e-16', '1.040834086e-17', '-2.386941191e-16',
             '5.551115123e-17', '0.2886759744', '-1.665334537e-16', '1.110223025e-16', '-1.263026767e-16'],
            ['0.1443058609', '-1.526556659e-16', '-6.66966482e-14', '-0.2609467146', '-0.2788356282', '0.1443078301',
             '5.297294803e-16', '0.2259850628', '-0.1304732201', '-0.2788357974', '0.1443078301', '-7.597778421e-16',
             '0.2259850628', '0.1304732201', '-0.2788357974', '0.1443058609', '8.026402023e-16', '-6.673724079e-14',
             '0.2609467146', '-0.2788356282', '0.1443078301', '-5.597328763e-16', '-0.2259850628', '0.1304732201',
             '-0.2788357974', '0.1443078301', '3.396440354e-16', '-0.2259850628', '-0.1304732201', '-0.2788357974'],
            ['-7.384348938e-17', '0.4082492589', '-2.401017914e-16', '-6.648546994e-17', '2.775557562e-17',
             '1.942890293e-16', '-0.4082478062', '3.330669074e-16', '-4.30211422e-16', '-3.378498335e-16',
             '2.838441288e-16', '0.4082478062', '2.280077169e-16', '2.71484224e-16', '-4.76077943e-16',
             '4.960722918e-16', '-0.4082492589', '-5.593909028e-17', '7.134776966e-16', '-7.874801651e-16',
             '2.782062775e-16', '0.4082478062', '-6.253678131e-16', '1.98625838e-16', '-4.691390491e-16',
             '-1.387778781e-16', '-0.4082478062', '-2.775557562e-17', '9.714451465e-17', '-2.559960781e-17'],
            ['-0.1772002834', '-3.053113318e-16', '1.137617611e-09', '0.4038893915', '0.3694788155', '-0.0886013932',
             '3.833812193e-16', '-0.1541658177', '0.1368684799', '0.1847406781', '0.0886014005', '-2.309838879e-16',
             '0.1541658327', '0.1368684873', '-0.1847406933', '0.1772002834', '4.022894037e-16', '1.137700715e-09',
             '0.4038893915', '-0.3694788155', '0.0886013932', '-3.318057316e-16', '-0.1541658177', '0.1368684799',
             '-0.1847406781', '-0.08860140049', '3.386991744e-16', '0.1541658327', '0.1368684873', '0.1847406933'],
            ['4.212689075e-09', '-1.092132597e-16', '0.04785720321', '-9.601679569e-09', '-8.78368333e-09',
             '0.1534620097', '2.932463357e-16', '0.3148816552', '-0.1541667198', '-0.3199787932', '0.1534620055',
             '-2.067183503e-16', '0.3148816479', '0.1541667133', '-0.3199787844', '-4.211942383e-09', '7.918090677e-17',
             '0.04785720321', '-9.600310872e-09', '8.782341927e-09', '-0.1534620097', '-1.254472278e-16',
             '0.3148816552', '-0.1541667198', '0.3199787932', '-0.1534620055', '1.205894971e-16', '0.3148816479',
             '0.1541667133', '0.3199787845'],
            ['5.633236958e-10', '-1.97964495e-16', '-0.07300229174', '-8.323513129e-10', '-7.462998381e-10',
             '0.2231626528', '9.201747408e-17', '0.3038704028', '-0.1332914482', '-0.2956855265', '-0.2231626534',
             '-3.630650212e-16', '-0.3038704034', '-0.1332914489', '0.2956855273', '5.619340488e-10', '1.090325311e-16',
             '0.07300229174', '8.307018283e-10', '-7.446775787e-10', '0.2231626528', '-1.468417265e-16',
             '-0.3038704028', '0.1332914482', '-0.2956855265', '-0.2231626534', '1.201493408e-16', '0.3038704034',
             '0.1332914489', '0.2956855273'],
            ['-0.2576844865', '-8.326672685e-17', '-1.593221111e-10', '0.3808278451', '0.3414278873', '0.1288423452',
             '9.229499415e-18', '0.1332923479', '-0.1499584745', '-0.1707137498', '0.1288423442', '8.683239123e-17',
             '0.1332923466', '0.149958474', '-0.1707137485', '-0.2576844865', '-1.258936655e-16', '1.594536184e-10',
             '-0.3808278451', '0.3414278873', '0.1288423452', '7.42155976e-17', '-0.1332923479', '0.1499584745',
             '-0.1707137498', '0.1288423442', '-4.851055417e-18', '-0.1332923466', '-0.149958474', '-0.1707137485'],
            ['0.2420107922', '1.942890293e-16', '1.963429419e-13', '-0.2266069512', '-0.2382176373', '-0.242012024',
             '-2.163788523e-17', '-0.1962461365', '0.1132994715', '0.2382164468', '0.242012024', '4.4659923e-17',
             '0.1962461365', '0.1132994715', '-0.2382164468', '-0.2420107922', '-8.840526713e-17', '-1.377895736e-13',
             '-0.2266069513', '0.2382176373', '0.242012024', '5.345354015e-17', '-0.1962461365', '0.1132994715',
             '-0.2382164468', '-0.242012024', '-1.448002988e-17', '0.1962461365', '0.1132994715', '0.2382164468'],
            ['-2.948813671e-09', '2.741675086e-17', '-0.2927752807', '-2.538738691e-09', '1.186720143e-10',
             '0.3263397261', '-2.181923899e-16', '-0.1702619985', '0.2673649149', '-0.01305970733', '-0.3263397231',
             '-8.682924681e-17', '0.1702619942', '0.2673649171', '0.0130597072', '-2.943197395e-09', '6.523611938e-17',
             '0.2927752806', '2.537010852e-09', '1.17157148e-10', '0.3263397261', '-1.351862462e-17', '0.1702619984',
             '-0.2673649149', '-0.01305970732', '-0.3263397232', '1.588299429e-16', '-0.1702619943', '-0.267364917',
             '0.01305970721'],
            ['0.3768264358', '2.775557562e-16', '-2.295848539e-09', '0.3246228517', '-0.01508160448', '-0.1884127361',
             '1.158296386e-16', '0.2673499247', '0.1384377164', '0.007539866028', '-0.1884127412', '1.34956382e-17',
             '0.2673499273', '-0.1384377121', '0.007539866237', '0.3768264358', '8.6405844e-17', '2.281355391e-09',
             '-0.3246228517', '-0.01508160447', '-0.1884127361', '2.556967028e-17', '-0.2673499246', '-0.1384377163',
             '0.007539866034', '-0.1884127412', '3.022724378e-17', '-0.2673499273', '0.1384377122', '0.007539866234'],
            ['0.2142672548', '1.665334537e-16', '4.482189175e-09', '0.07917654878', '-0.05214825519', '0.1071409877',
             '-1.629529519e-16', '0.1941908116', '0.4155497267', '-0.02607205878', '-0.1071409909', '5.850160102e-17',
             '-0.1941908084', '0.4155497234', '0.02607205955', '-0.2142672549', '-5.80671591e-17', '4.491293108e-09',
             '0.07917654883', '0.0521482552', '-0.1071409877', '-4.482993963e-17', '0.1941908117', '0.4155497267',
             '0.02607205878', '0.1071409909', '-2.847483514e-17', '-0.1941908084', '0.4155497234', '-0.02607205955'],
            ['1.816664718e-09', '-2.955517288e-16', '-0.5276657401', '6.687226883e-10', '-4.431967602e-10',
             '0.1855645666', '-1.218295846e-16', '-0.191307586', '-0.1941966398', '-0.04515856473', '0.1855645648',
             '-3.159289876e-18', '-0.1913075893', '0.1941966468', '-0.04515856429', '-1.826981386e-09',
             '1.829799537e-16', '-0.5276657401', '6.775564363e-10', '4.436239373e-10', '-0.1855645666',
             '-7.585590647e-17', '-0.191307586', '-0.1941966398', '0.04515856474', '-0.1855645648', '1.652459095e-16',
             '-0.1913075893', '0.1941966469', '0.04515856429'],
            ['5.409965795e-14', '-1.987514448e-16', '-0.4082607132', '1.394440119e-13', '3.628413583e-14',
             '1.419195862e-05', '4.000666249e-17', '-0.2041312596', '-0.3535421102', '-5.316076835e-07',
             '-1.419196098e-05', '1.417426808e-16', '0.2041312596', '-0.3535421102', '5.316080876e-07',
             '4.952262558e-13', '-6.971823225e-17', '0.4082607132', '-3.306356924e-13', '-4.652344048e-14',
             '1.419196092e-05', '-7.174255294e-17', '0.2041312596', '0.3535421102', '-5.316081243e-07',
             '-1.41919591e-05', '8.328909809e-17', '-0.2041312596', '0.3535421102', '5.316077309e-07'],
            ['-0.2832377631', '-2.220446049e-16', '1.898481372e-14', '-0.2939057163', '-0.008165652713', '0.2832295924',
             '-1.031683159e-16', '-0.2545324426', '0.1469424642', '0.00816741351', '-0.2832295924', '-1.576971051e-17',
             '0.2545324426', '0.1469424642', '-0.00816741351', '0.2832377631', '4.991955594e-17', '3.642989342e-13',
             '-0.2939057163', '0.008165652713', '-0.2832295924', '1.652220903e-17', '-0.2545324426', '0.1469424642',
             '-0.00816741351', '0.2832295924', '-7.603363275e-17', '0.2545324426', '0.1469424642', '0.00816741351']])
        self.assertEqual(energies, ['-22.8993', '-19.1861', '-19.1860', '-14.4556', '-14.4556', '-12.3487', '-11.7604',
                                    '-11.2757', '-10.9047', '-10.9046', '-9.3503', '-9.3502', '-3.3950', '-1.2600',
                                    '-1.2599', '2.9095', '2.9095', '4.6567', '4.9440', '5.4748', '5.4748', '7.4076',
                                    '7.4077', '7.9895', '11.2405', '11.2406', '11.3210', '11.3211', '13.0015',
                                    '13.7314']
                         )

    def test_set_eig_to_atoms(self):
        orb_dict, quantum_dict = create_orbital_dict("test_files/test_output.txt")
        atoms = create_all_atoms("test_files/test_output.txt")
        all_modes, energies = eig_arr_from_wf("test_files/test_wavefunction.wf", atoms, orb_dict)
        set_eig_to_atoms(atoms, orb_dict, quantum_dict, all_modes, energies)
        np.testing.assert_array_almost_equal(atoms[0].get_eigenvector(0),
                                             [3.81769113e-01, -5.55111512e-17, -1.13797860e-13, 1.06233032e-01])
        np.testing.assert_array_almost_equal(atoms[0].get_eigenvector(11),
                                             [5.173881e-02, -8.500145e-17, 4.001694e-09, 2.666762e-01])
        np.testing.assert_array_almost_equal(atoms[11].get_eigenvector(0), [0.09816])
        np.testing.assert_array_almost_equal(atoms[11].get_eigenvector(11), [0.169801])

    def test_trans_plato_input(self):
        pass

    def test_curr_plato_input(self):
        pass

    def test_find_current_in_file(self):
        pass

    def test_isfloat(self):
        pass

    def test_isposfloat(self):
        pass

    def test_isdigit(self):
        pass

    def test_process_current_csv(self):
        pass

    def test_transmission_headers(self):
        pass
